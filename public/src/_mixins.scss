// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

// =============================================================================
// Transition
// =============================================================================

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

// =============================================================================
// Size
// =============================================================================
@mixin square($size){
	height: $size;
	width: $size;
}
@mixin size($height, $width){
	height: $height;
	width: $width;
}

// =============================================================================
// Flexbox
// =============================================================================

@mixin flex($flex-direction: null, $justify-content: null, $align-items: null){
	$box-orient: $flex-direction;
	$box-direction: $flex-direction;
	@if $flex-direction == 'row' {
		$box-orient: 'horizontal';
		$box-direction: 'normal';
	} @else if $flex-direction == 'column' {
		$box-orient: 'vertical';
		$box-direction: 'normal';
	} @else if $flex-direction == 'row-reverse' {
		$box-orient: 'horizontal';
		$box-direction: 'reverse';
	} @else if $flex-direction == 'column-reverse' {
		$box-orient: 'vertical';
		$box-direction: 'reverse';
	}
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-webkit-box-orient: $box-orient;
	-moz-box-orient: $box-orient;
	-webkit-box-direction: $box-direction;
	-moz-box-direction: $box-direction;
	-webkit-flex-direction: $flex-direction;
	-ms-flex-direction: $flex-direction;
	flex-direction: $flex-direction;
	-webkit-box-pack: $justify-content;
	-ms-flex-pack: $justify-content;
	-webkit-justify-content: $justify-content;
	justify-content: $justify-content;
	-webkit-align-items: $align-items;
	align-items: $align-items;
	@content
}